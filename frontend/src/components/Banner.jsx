import React, { useEffect, useRef, useState } from 'react'
import { assets } from '../assets/assets'
import { useNavigate } from 'react-router-dom'

const Banner = () => {

    const navigate = useNavigate();

    // Small, dependency-free counter component
    const Counter = ({ end = 50, duration = 1500, suffix = '+', label, as = 'div' }) => {
        const [val, setVal] = useState(0)
        const ref = useRef(null)
        const started = useRef(false)

        useEffect(() => {
            const el = ref.current
            if (!el) return

            const obs = new IntersectionObserver(
                ([e]) => {
                    if (e.isIntersecting && !started.current) {
                        started.current = true
                        const startTs = performance.now()
                        const animate = (now) => {
                            const p = Math.min(1, (now - startTs) / duration)
                            setVal(Math.floor(end * (1 - Math.pow(1 - p, 3)))) // ease-out
                            if (p < 1) requestAnimationFrame(animate)
                        }
                        requestAnimationFrame(animate)
                    }
                },
                { threshold: 0.3 }
            )
            obs.observe(el)
            return () => obs.disconnect()
        }, [end, duration])

        const WrapperEl = as || 'div'

        return React.createElement(
            WrapperEl,
            { ref, className: 'inline-flex flex-col items-start' },
            (
                <span className="inline-flex items-baseline gap-1 tabular-nums text-4xl sm:text-5xl font-extrabold text-white drop-shadow-[0_2px_20px_rgba(216,0,255,0.25)]">
                    <span>{val}</span>
                    <span>{suffix}</span>
                </span>
            ),
            label && (
                <span className="mt-1 inline-flex font-semibold bg-clip-text text-transparent bg-gradient-to-r from-pink-400 via-purple-400 to-indigo-300 text-sm sm:text-base">
                    {label}
                </span>
            )
        )
    }

  return (
    <div className='flex bg-primary-500 rounded-lg px-6 sm:px-10 md:px-14 lg:px-12 my-20 md:mx-10'>
        {/* --- this is for left side --- */}
        <div className='flex-1 py-8 sm:py-10 md:py-16 lg-py-24 lg-pl-5'>
            <div className='text-xl sm:text-2xl md:text-5xl font-semibold text-white px-30'>
                <p>Book Today ,</p>
                <p className='mt-4 flex items-baseline gap-2'>
                    With
                    <span className='inline-flex items-baseline gap-1'>
                        {/* Animated 50+ inline */}
                        <Counter as="span" end={50} duration={1400} suffix='+' />
                    </span>
                    Trusted Doctors
                </p>
            </div>
            <div className='px-30'>
            <button
                onClick={()=>{navigate('/login'); scrollTo(0,0)}}
                className='px-30btn-shine relative overflow-hidden rounded-full mt-6 px-8 py-3 text-sm sm:text-base font-semibold tracking-wide text-white bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500 shadow-[0_10px_30px_rgba(124,58,237,0.35)] hover:shadow-[0_14px_40px_rgba(124,58,237,0.5)] transition-all duration-300 hover:scale-[1.04] focus:outline-none focus:ring-2 focus:ring-purple-300'
            >
                Create Account
            </button></div>

            {/* Counters row (footer-like stats) */}
            <div className='mt-8 grid grid-cols-2 gap-6 max-w-md px-30'>
                <Counter end={50} duration={1600} suffix='+' label='Doctors' />
                <Counter end={2500} duration={1800} suffix='+' label='Patients' />
            </div>
        </div>

        {/* --- this is for right side --- */}
        <div className='hidden md:block md:w-1/2 lg:w-[700px] relative'>
            <img className='w-full absolute bottom-0 right-0 ' src={assets.appointment_img} alt="" />
        </div>
    </div>
  )
}

export default Banner


/*
This set of Tailwind CSS classes creates a responsive element that changes its visibility and width based on the screen size. It's a classic example of a "mobile-first" design approach.

Here's a breakdown of what each class does:

## Visibility & Layout
hidden: This makes the element hidden by default on small screens (mobile). It sets the CSS property display: none;.

md:block: At the medium breakpoint (768px and wider), this class overrides hidden. It makes the element visible by setting its display property to block (display: block;), which means it will take up its own line.

In summary: The element is invisible on mobile and appears on tablet-sized screens and larger.

## ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ (Positioning)
Positioning ‡∂≠‡∑ö‡∂ª‡∑î‡∂∏‡∑ä ‡∂ú‡∂±‡∑ä‡∂± ‡∑Ñ‡∑ú‡∂≥‡∂∏ ‡∑Ä‡∑í‡∂Ø‡∑í‡∑Ñ ‡∂≠‡∂∏‡∂∫‡∑í relative ‡∑É‡∑Ñ absolute ‡∂ë‡∂ö‡∂ß ‡∑Ñ‡∑í‡∂≠‡∂± ‡∂ë‡∂ö. ‡∑Ñ‡∑í‡∂≠‡∂±‡∑ä‡∂± relative ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±‡∑ö ‡∂∂‡∑í‡∂≠‡∑ä‡∂≠‡∑í‡∂∫‡∂ö‡∑ä, absolute ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±‡∑ö ‡∂í ‡∂∂‡∑í‡∂≠‡∑ä‡∂≠‡∑í‡∂∫‡∑ö ‡∂ú‡∑Ñ‡∂± ‡∂¥‡∑ù‡∑É‡∑ä‡∂ß‡∂ª‡∂∫‡∂ö‡∑ä ‡∂ö‡∑í‡∂∫‡∂Ω‡∑è.

relative (‡∑É‡∑è‡∂¥‡∑ö‡∂ö‡∑ä‡∑Ç ‚öìÔ∏è)
‡∂∏‡∑ö‡∂ö ‡∂±‡∑ê‡∂Ç‡∂ú‡∑î‡∂ª‡∂∏‡∂ö‡∑ä (anchor) ‡∑Ä‡∂ú‡∑ö. ‡∂∏‡∑ö class ‡∂ë‡∂ö ‡∂Ø‡∑è‡∂¥‡∑î element ‡∂ë‡∂ö ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑í‡∂Ø‡∑í‡∑Ñ‡∂ß‡∂∏ page ‡∂ë‡∂ö‡∑ö ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑Ä‡∑è. ‡∑Ñ‡∑ê‡∂∂‡∑ê‡∂∫‡∑í, ‡∂í‡∂ö ‡∂á‡∂≠‡∑î‡∑Ö‡∑ö ‡∂≠‡∑í‡∂∫‡∑ô‡∂± absolute element ‡∑Ä‡∂Ω‡∂ß ‡∑É‡∑ì‡∂∏‡∑è‡∑Ä‡∂ö‡∑ä (boundary) ‡∑Ñ‡∂Ø‡∂±‡∑Ä‡∑è. absolute element ‡∂ë‡∂ö‡∂ö‡∑ä ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂ú‡∂≠ ‡∑Ä‡∑ô‡∂±‡∑ä‡∂±‡∑ö ‡∂≠‡∂∏‡∂±‡∑ä‡∂ß ‡∑Ö‡∂ü‡∂∏ ‡∂≠‡∑í‡∂∫‡∑ô‡∂± relative parent ‡∂ë‡∂ö‡∂ß ‡∑É‡∑è‡∂¥‡∑ö‡∂ö‡∑ä‡∑Ç‡∑Ä‡∂∫‡∑í.

absolute (‡∂±‡∑í‡∂ª‡∂¥‡∑ö‡∂ö‡∑ä‡∑Ç üìå)
‡∂∏‡∑ö‡∂ö ‡∂¥‡∑è‡∑Ä‡∑ô‡∂± element ‡∂ë‡∂ö‡∂ö‡∑ä ‡∑Ä‡∂ú‡∑ö. absolute ‡∂Ø‡∑è‡∂¥‡∑î ‡∂ú‡∂∏‡∂±‡∑ä, ‡∂í element ‡∂ë‡∂ö page ‡∂ë‡∂ö‡∑ö ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∂¥‡∑í‡∑Ö‡∑í‡∑Ä‡∑ô‡∑Ö‡∑ô‡∂±‡∑ä (normal flow) ‡∂â‡∑Ä‡∂≠‡∑ä ‡∑Ä‡∑ô‡∂±‡∑Ä‡∑è. ‡∂ä‡∂ß‡∂¥‡∑É‡∑ä‡∑É‡∑ö top, bottom, left, right class ‡∂¥‡∑è‡∑Ä‡∑í‡∂†‡∑ä‡∂†‡∑í ‡∂ö‡∂ª‡∂Ω‡∑è, ‡∂í‡∂ö‡∑ö relative parent ‡∂ë‡∂ö ‡∂á‡∂≠‡∑î‡∑Ö‡∑ö ‡∂ï‡∂±‡∑ë‡∂∏ ‡∂≠‡∑ê‡∂±‡∂ö ‡∂±‡∑í‡∑Å‡∑ä‡∂†‡∑í‡∂≠‡∑Ä‡∂∏ ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä.

‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫:
Card ‡∂ë‡∂ö‡∂ö ‡∂ö‡∑ô‡∑Ö‡∑Ä‡∂ª‡∑ö‡∂∏ "New" badge ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑è‡∂±‡∑ä‡∂± ‡∂ï‡∂± ‡∂±‡∂∏‡∑ä,

Card ‡∂ë‡∂ö‡∂ß relative class ‡∂ë‡∂ö ‡∂Ø‡∑è‡∂±‡∑Ä‡∑è (‡∂∏‡∑ö‡∂ö ‡∂≠‡∂∏‡∂∫‡∑í ‡∂∂‡∑í‡∂≠‡∑ä‡∂≠‡∑í‡∂∫).

"New" badge ‡∂ë‡∂ö‡∂ß absolute, top-0, right-0 class ‡∂Ø‡∑è‡∂±‡∑Ä‡∑è (‡∂∏‡∑ö‡∂ö ‡∂≠‡∂∏‡∂∫‡∑í ‡∂¥‡∑ù‡∑É‡∑ä‡∂ß‡∂ª‡∂∫).

‡∂ë‡∂≠‡∂ö‡∑ú‡∂ß badge ‡∂ë‡∂ö Card ‡∂ë‡∂ö‡∑ö ‡∂ã‡∂©‡∂∏ ‡∂Ø‡∂ö‡∑î‡∂´‡∑î ‡∂ö‡∑ô‡∑Ö‡∑Ä‡∂ª‡∂ß ‡∂∫‡∂±‡∑Ä‡∑è.

## ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä Position ‡∂ö‡∑ä‚Äç‡∂ª‡∂∏
fixed (‡∑É‡∑ä‡∂Æ‡∑è‡∑Ä‡∂ª)
‡∂∏‡∑ö class ‡∂ë‡∂ö ‡∂Ø‡∑è‡∂¥‡∑î element ‡∂ë‡∂ö page ‡∂ë‡∂ö scroll ‡∂ö‡∑Ö‡∂≠‡∑ä, ‡∂ë‡∂ö‡∂∏ ‡∂≠‡∑ê‡∂± ‡∑Ñ‡∑í‡∂ª‡∑Ä‡∑ô‡∂Ω‡∑è (fixed) ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑Ä‡∑è. ‡∂í‡∂ö ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂ú‡∂≠ ‡∑Ä‡∑ô‡∂±‡∑ä‡∂±‡∑ö browser window ‡∂ë‡∂ö‡∂ß (viewport) ‡∑É‡∑è‡∂¥‡∑ö‡∂ö‡∑ä‡∑Ç‡∑Ä‡∂∫‡∑í. ‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä ‡∑Ä‡∑í‡∂Ø‡∑í‡∑Ñ‡∂ß, ‡∑É‡∂∏‡∑Ñ‡∂ª websites ‡∑Ä‡∂Ω ‡∂ã‡∂©‡∂∏ ‡∂≠‡∑í‡∂∫‡∑ô‡∂± navigation bar ‡∂ë‡∂ö.

sticky (‡∂á‡∂Ω‡∑ô‡∂± ‡∑É‡∑î‡∑Ö‡∑î)
‡∂∏‡∑ö‡∂ö relative ‡∑É‡∑Ñ fixed ‡∑Ä‡∂Ω ‡∂ë‡∂ö‡∂≠‡∑î‡∑Ä‡∂ö‡∑ä. Element ‡∂ë‡∂ö ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑í‡∂Ø‡∑í‡∑Ñ‡∂ß scroll ‡∑Ä‡∑ô‡∂±‡∑Ä‡∑è, ‡∑Ñ‡∑ê‡∂∂‡∑ê‡∂∫‡∑í ‡∂Ö‡∂¥‡∑í ‡∂Ø‡∑ô‡∂± top-0 ‡∑Ä‡∂ú‡∑ö ‡∂≠‡∑ê‡∂±‡∂ö‡∂ß ‡∂Ü‡∑Ä‡∂∏, ‡∂í‡∂ö ‡∂≠‡∑í‡∂ª‡∂∫‡∑ö ‡∂ã‡∂©‡∂ß‡∂∏ ‡∂á‡∂Ω‡∑í‡∂Ω‡∑è (sticks) ‡∂ë‡∂≠‡∂± ‡∂â‡∂≥‡∂±‡∑ä fixed ‡∑Ä‡∂ú‡∑ö ‡∑Ñ‡∑ê‡∑É‡∑í‡∂ª‡∑ô‡∂±‡∑Ä‡∑è. Section ‡∂∏‡∑è‡∂≠‡∑ò‡∂ö‡∑è (headings) ‡∑Ä‡∂Ω‡∂ß ‡∂∏‡∑ö‡∂ö ‡∂ú‡∑ú‡∂©‡∂ö‡∑ä ‡∂¥‡∑è‡∑Ä‡∑í‡∂†‡∑ä‡∂†‡∑í ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è.












Tools



*/